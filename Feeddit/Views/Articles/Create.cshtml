@model Feeddit.Models.Article

@{
    ViewBag.Title = "Add new article";
}
<div class="card shadow">
    <div class="card-header">
        <h2>Add new article</h2>
        @if (TempData["alert"] != null)
        {
            <div class="alert alert-@TempData["aType"] alert-sm text-center container topalert">
                @TempData["alert"]
            </div>
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("Vote #:")
                    <div class="col-md-2">
                        <input type="text" id="votes" value="0" class="form-control" readonly />

                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("By user:")
                    <div class="col-md-2">
                        <input type="text" id="userby" value="@ViewBag.Name" class="form-control" readonly />
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ArticleUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.ArticleUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ArticleUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="row">
                        <div class="col-md-1">
                            <input type="submit" value="Publish" class="btn btn-lang btn-lg" />
                        </div>
                        <div class="col-md-1">
                            <input type="button" value="Cancel" class="btn btn-lang btn-lg"
                                   onclick="javascript:document.location.href='@Url.Action("Index", "Articles")'" />

                        </div>
                    </div>
                </div>

                </div>
                }
            </div>


        </div>


                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
